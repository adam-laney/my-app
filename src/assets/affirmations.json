[
    "Need someone who feels ownership for the whole thing rather than individual parts. - ex Real Estate",
    "Less experienced SE’s may see producing code as the only important skill in software engineering, they need role models.",
    "If you feel someone should do something, that someone is probably you.",
    "Do just enough work on hard problems to hand them off and expand other people’s skills - working on this.",
    "Don’t silently let disasters unfold.",
    "Need to work in mission critical areas.",
    "If there are people being the voice of reason, don’t butt in, try to find a problem that actually needs you and that will benefit from your attention.",
    "Need for more long-term projects, we get used to iterating on short term goals.",
    "Everything you commit to has an opportunity cost, pick your battles.",
    "Schedule time on calendar as not available to make time for work without interruptions.",
    "If you take on projects that teach you nothing your skills are atrophying.",
    "There should be clearly defined things for a staff software engineer to be doing.",
    "Sometimes what you’re doing on a team no longer aligns with your personal growth, and it may be time to do something new.",
    "Find chances to help other people grow on difficult tasks rather than taking them all on yourself.",
    "Ask for help if you need it.",
    "If you’re stuck on getting a key decision made talk to the project sponsor.",
    "There can be many fine solutions to the same problem.",
    "If the problem is undefined you’ll never be able to come to a decision on it.",
    "If noone cares about your work, it can demoralize the team. May need a “rebrand” of the project or a “Phase 2” to get people excited again.",
    "Sometimes the job isn’t done even if the specs are filled, need to think about scaling, reusability, and technical debt.",
    "Don’t declare victory unless your project is truly complete.",
    "Many of the best leaders are quiet and thoughtful, influencing through good decisions and effective collaboration.",
    "To do a good job, be competent, a responsible adult, remembering the goal, and looking ahead.",
    "Own your mistakes without beating yourself up.",
    "You’re working as part of a team, not as a collection of competing individuals.",
    "Take charge when noone else is, create calm.",
    "Give shortcuts to help people learn (stackoverflow links, small examples, etc)",
    "Assume people are reasonably trying their best.",
    "Let other people do work that isn’t as good as you would have done it, as long as it’s good enough.",
    "Offer advice and experience, but make sure it’s welcome.",
    "It’s easy to get typecast/pigeonhole, try to stay dynamic.",
    "It may be hard to get promoted without appropriately sized/scoped project that needs leadership.",
    "Take your responsibility to make good software seriously."
]
